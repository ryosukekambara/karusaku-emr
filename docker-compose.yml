version: '3.8'

services:
  # メインアプリケーション
  karusaku-emr:
    build: .
    container_name: karusaku-emr-app
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - JWT_EXPIRES_IN=24h
      - BCRYPT_ROUNDS=12
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=100
      - LOG_LEVEL=info
      - SQLITE_PATH=/app/data/medical_records.db
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - karusaku-network

  # Redis（セッション管理・キャッシュ用）
  redis:
    image: redis:7-alpine
    container_name: karusaku-emr-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - karusaku-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-karusaku-redis-password}

  # PostgreSQL（本番環境用データベース）
  postgres:
    image: postgres:15-alpine
    container_name: karusaku-emr-postgres
    environment:
      - POSTGRES_DB=karusaku_emr
      - POSTGRES_USER=${POSTGRES_USER:-karusaku}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-karusaku-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - karusaku-network

  # Nginx（リバースプロキシ・SSL終端）
  nginx:
    image: nginx:alpine
    container_name: karusaku-emr-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - karusaku-emr
    restart: unless-stopped
    networks:
      - karusaku-network

  # バックアップサービス
  backup:
    image: alpine:latest
    container_name: karusaku-emr-backup
    volumes:
      - ./data:/app/data
      - ./backups:/app/backups
    environment:
      - BACKUP_SCHEDULE=0 2 * * *
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=karusaku_emr
      - POSTGRES_USER=${POSTGRES_USER:-karusaku}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-karusaku-password}
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - karusaku-network
    command: |
      sh -c "
      apk add --no-cache postgresql-client &&
      while true; do
        pg_dump -h postgres -U $${POSTGRES_USER} -d $${POSTGRES_DB} > /app/backups/backup_$$(date +%Y%m%d_%H%M%S).sql
        sleep 86400
      done
      "

volumes:
  postgres_data:
  redis_data:

networks:
  karusaku-network:
    driver: bridge


